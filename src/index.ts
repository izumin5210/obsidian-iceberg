import { readFileSync, writeFileSync } from "fs";
import * as path from "path";
import { cssVariablesRoot, cssVariablesThemeDark } from "./cssVariables";

const targetPath = path.join(__dirname, "..", "obsidian.css");
const rootColorsPattern = / *\/\* ROOT_COLORS_BEGIN \*\/\n[\s\S]* *\/\* ROOT_COLORS_END \*\//m;
const darkColorsPattern = / *\/\* DARK_COLORS_BEGIN \*\/\n[\s\S]* *\/\* DARK_COLORS_END \*\//m;

const body = readFileSync(targetPath, "utf-8");

const rootVars = (() => {
  const buf = [];
  buf.push("  /* ROOT_COLORS_BEGIN */");
  buf.push("  /* Color definitions are generated by src/index.ts. DO NOT EDIT. */");
  for (const [k, v] of Object.entries(cssVariablesRoot())) {
    buf.push(`  --${k}: ${v};`);
  }
  buf.push("  /* ROOT_COLORS_END */");
  return buf.join("\n");
})();

const darkVars = (() => {
  const buf = [];
  buf.push("  /* DARK_COLORS_BEGIN */");
  buf.push("  /* Color definitions are generated by src/index.ts. DO NOT EDIT. */");
  for (const [k, v] of Object.entries(cssVariablesThemeDark())) {
    buf.push(`  --${k}: ${v};`);
  }
  buf.push("  /* DARK_COLORS_END */");
  return buf.join("\n");
})();

const newBody = body.replace(rootColorsPattern, rootVars).replace(darkColorsPattern, darkVars);

writeFileSync(targetPath, newBody);
